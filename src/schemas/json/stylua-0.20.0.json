{
  "$id": "https://json.schemastore.org/stylua.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "type": "object",
  "properties": {
    "call_parentheses": {
      "description": "Whether parentheses should be applied on function calls with a single string/table argument. Possible options: `Always`, `NoSingleString`, `NoSingleTable`, `None`, `Input`.\n\n* `Always` applies parentheses in all cases.\n* `NoSingleString` omits parentheses on calls with a single string argument.\n* Similarly, `NoSingleTable` omits parentheses on calls with a single table argument.\n* `None` omits parentheses in both cases. Note: parentheses are still kept in situations where removal can lead to obscurity (e.g. `foo \"bar\".setup -> foo(\"bar\").setup`, since the index is on the call result, not the string).\n* `Input` removes all automation and preserves parentheses only if they were present in input code: consistency is not enforced.\n",
      "type": "string",
      "default": "Always",
      "enum": [
        "Always",
        "NoSingleString",
        "NoSingleTable",
        "None",
        "Input"
      ]
    },
    "collapse_simple_statement": {
      "description": "Specify whether to collapse simple statements. Possible options: `Never`, `FunctionOnly`, `ConditionalOnly`, or `Always`\n",
      "type": "string",
      "default": "Never",
      "enum": [
        "Never",
        "FunctionOnly",
        "ConditionalOnly",
        "Always"
      ]
    },
    "column_width": {
      "description": "Approximate line length for printing. Used as a guide for line wrapping - this is not a hard requirement: lines may fall under or over the limit.\n",
      "type": "integer",
      "default": 120,
      "minimum": 0
    },
    "indent_type": {
      "description": "Indent type. Possible options: `Tabs` or `Spaces`",
      "default": "Tabs",
      "type": "string",
      "enum": [
        "Tabs",
        "Spaces"
      ]
    },
    "indent_width": {
      "description": "Character size of single indentation. If `indent_type` is set to `Tabs`, this option is used as a heuristic to determine column width only.\n",
      "type": "integer",
      "default": 4,
      "minimum": 1
    },
    "line_endings": {
      "description": "Line endings type. Possible options: `Unix` (LF) or `Windows` (CRLF)",
      "type": "string",
      "default": "Unix",
      "enum": [
        "Unix",
        "Windows"
      ]
    },
    "quote_style": {
      "description": "Quote style for string literals. Possible options: `AutoPreferDouble`, `AutoPreferSingle`, `ForceDouble`, `ForceSingle`. \n\n* `AutoPrefer` styles will prefer the specified quote style, but fall back to the alternative if it has fewer string escapes. \n* `Force` styles always use the specified style regardless of escapes.\n",
      "type": "string",
      "default": "AutoPreferDouble",
      "enum": [
        "AutoPreferDouble",
        "AutoPreferSingle",
        "ForceDouble",
        "ForceSingle"
      ]
    },
    "sort_requires": {
      "description": "StyLua has built-in support for sorting require statements. We group consecutive require statements into a single \"block\", and then requires are sorted only within that block. Blocks of requires do not move around the file.\n\nWe only include requires of the form `local NAME = require(EXPR)`, and sort lexicographically based on NAME. (We also sort Roblox services of the form `local NAME = game:GetService(EXPR)`)",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        }
      }
    }
  }
}
